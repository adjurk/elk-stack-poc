---
eck-elasticsearch:
  nodeSets:
  - name: default
    count: 2
    config:
      # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
      # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
      # and leave node.store.allow_mmap unset.
      # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html
      #
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi
eck-kibana:
  enabled: true
  spec:
    count: 1
    elasticsearchRef:
      name: elasticsearch
# https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-quickstart.html
# https://github.com/elastic/cloud-on-k8s/blob/2.13/deploy/eck-stack/charts/eck-beats/values.yaml
eck-beats:
  enabled: true
  serviceAccount:
    name: elastic-beat-filebeat
    namespace: elastic-stack
# ClusterRoleBinding to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
  clusterRoleBinding:
    name: elastic-beat-autodiscover-binding
    subjects:
    - kind: ServiceAccount
      name: elastic-beat-filebeat
      namespace: elastic-stack
    roleRef:
      kind: ClusterRole
      name: elastic-beat-autodiscover
      apiGroup: rbac.authorization.k8s.io
# ClusterRole to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
  clusterRole:
   name: elastic-beat-autodiscover
   rules:
   - apiGroups: [""]
     resources:
     - events
     - pods
     - namespaces
     - nodes
     verbs:
     - get
     - watch
     - list
  spec:
    type: filebeat
    daemonSet: null
    config:
      processors:
      - add_host_metadata: {}
      - add_cloud_metadata: {}
      - add_kubernetes_metadata: {}
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            node: ${NODE_NAME}
            hints.enabled: true
      output.logstash:
        # This needs to be {{logstash-name}}-ls-beats:5044
        hosts: ["logstash-ls-beats-ls-beats:5044"]
    daemonSet:
      podTemplate:
        spec:
          serviceAccount: elastic-beat-filebeat
          automountServiceAccountToken: true
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true
          securityContext:
            runAsUser: 0
          containers:
          - name: filebeat
            volumeMounts:
            - name: varlogcontainers
              mountPath: /var/log/containers
            - name: varlogpods
              mountPath: /var/log/pods
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
            - mountPath: /usr/share/filebeat/config/elasticsearch-certs
              name: elasticsearch-certs
              readOnly: true
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
          volumes:
          - name: varlogcontainers
            hostPath:
              path: /var/log/containers
          - name: varlogpods
            hostPath:
              path: /var/log/pods
          - name: varlibdockercontainers
            hostPath:
              path: /var/lib/docker/containers
          - name: elasticsearch-certs
            secret:
              defaultMode: 420
              optional: false
              secretName: eck-stack-with-logstash-eck-kibana-kb-es-ca
eck-logstash:
  enabled: true
  # This is required to be able to set the logstash
  # output of beats in a consistent manner.
  fullnameOverride: "logstash-ls-beats"
  elasticsearchRefs:
    # This clusterName is required to match the environment variables
    # used in the below config.string output section.
    - clusterName: eck
      name: elasticsearch
  pipelines:
    - pipeline.id: main
      config.string: |
        input {
          beats {
            port => 5044
          }
        }
        filter {
          grok {
            match => { "message" => "%{HTTPD_COMMONLOG}"}
          }
          geoip {
            source => "[source][address]"
            target => "[source]"
          }
          if [kubernetes][container][name] in ["sleeper", "filebeat"] {
            json {
              source => "message"
            }
            mutate {
              rename => { "[msg]" => "message_content" }
              rename => { "[level]" => "log.level" }
            }
          }
        }
        output {
          elasticsearch {
            hosts => [ "${ECK_ES_HOSTS}" ]
            user => "${ECK_ES_USER}"
            password => "${ECK_ES_PASSWORD}"
            ssl_certificate_authorities => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
          }
        }
  services:
    - name: beats
      service:
        spec:
          type: ClusterIP
          ports:
            - port: 5044
              name: "filebeat"
              protocol: TCP
              targetPort: 5044